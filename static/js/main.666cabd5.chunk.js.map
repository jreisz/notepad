{"version":3,"sources":["components/notes-list.jsx","components/note-form.jsx","components/app.jsx","index.js","services/notes.js"],"names":["NotesList","onClickNote","note","props","onSelect","elements","this","notes","map","idx","style","minHeight","data-testid","onClick","className","selected","id","title","bind","React","Component","NoteForm","onChange","onCancel","onSubmit","e","target","name","value","preventDefault","text","type","App","service","state","setState","saveNote","getNotes","svc","data","updateCb","clone","index","findIndex","uuid","update","push","splice","require","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.666cabd5.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport class NotesList extends React.Component {\r\n    onClickNote = (note) => {\r\n        this.props.onSelect(note);\r\n    }\r\n    render() {\r\n        const elements = this.props.notes.map(function (note, idx) {\r\n            return <div style={{minHeight:'42px'}} key={note.id} data-testid=\"note-item\" onClick={() => this.onClickNote(note)} className={\"list-group-item \" + ((this.props.selected == null ? '' : (this.props.selected.id === note.id ? 'active ' : ' ')))}  >{note.title}</div>;\r\n        }.bind(this));\r\n        return <div className=\"list-group\">\r\n            {elements}\r\n        </div>\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport class NoteForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)        \r\n        this.onChange = this.onChange.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onChange(e) {\r\n        this.props.onChange({\r\n            ...this.props.note,\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n    onCancel() {        \r\n        this.props.onCancel();\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.props.note)\r\n    }\r\n    render() {\r\n        return <form>\r\n            <div className=\"form-group\">\r\n                <label>Title:</label>\r\n                <input\r\n                    className=\"form-control\"\r\n                    data-testid=\"input-title\"\r\n                    name=\"title\"\r\n                    onChange={this.onChange}\r\n                    value={(this.props.note === null ? '' : this.props.note.title)}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label>Note:</label>\r\n                <textarea\r\n                    className=\"form-control\"\r\n                    data-testid=\"input-text\"\r\n                    name=\"text\"\r\n                    onChange={this.onChange}\r\n                    value={(this.props.note === null ? '' : this.props.note.text)}\r\n                />\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <input\r\n                    type=\"button\"\r\n                    onClick={this.onCancel}\r\n                    data-testid=\"cancel-note\"\r\n                    className=\"btn btn-default pull-right\"\r\n                    value=\"Cancel\"\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    data-testid=\"save-note\"\r\n                    onClick={this.onSubmit}\r\n                    className=\"btn btn-default pull-right\"\r\n                    value=\"Save\"\r\n                />\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport { NotesList } from './notes-list'\r\nimport { NoteForm } from './note-form'\r\n\r\nexport class App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.service = this.props.service\r\n        this.state = {\r\n            selected: null\r\n        }\r\n\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n    onClick() {\r\n        const note ={title:'', text:''}\r\n        this.setState({\r\n            selected: note\r\n        })\r\n    }\r\n    onSelect(note) {\r\n        this.setState({\r\n            selected: note\r\n        })\r\n    }\r\n    onSubmit(note) {                \r\n        this.service.saveNote(note)\r\n        this.setState({\r\n            selected: note\r\n        })\r\n        this.props.service.getNotes()\r\n    }\r\n    onChange(note) {\r\n        this.setState({\r\n            selected: note\r\n        })\r\n    }\r\n    onCancel() {\r\n        this.setState({\r\n            selected: null\r\n        })\r\n    }\r\n    componentDidMount() {        \r\n        this.props.service.getNotes()\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1>React notes</h1>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-4\">\r\n                        <NotesList onSelect={this.onSelect} selected={this.state.selected} notes={this.props.service.notes} />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <NoteForm onCancel={this.onCancel} onSubmit={this.onSubmit} onChange={this.onChange} note={this.state.selected} />\r\n                        {this.state.selected === null &&\r\n                            <div><button data-testid=\"new-note\" id=\"new-note\" onClick={this.onClick}>New Note</button></div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport { App } from './components/app'\r\n\r\nimport { NotesService } from './services/notes'\r\nconst notes = require('./test/notes.json')\r\nconst svc = new NotesService(notes)\r\n\r\nReactDOM.render(<App service={svc} />, document.getElementById('root'))\r\n","import uuid from 'uuid/dist/v4'\r\n\r\nexport class NotesService {\r\n\r\n    constructor(data){\r\n        this.notes = data\r\n    }\r\n    getNotes(){\r\n        return this.notes\r\n    }\r\n    update(updateCb){     \r\n        const clone = [...this.notes]\r\n        updateCb(clone)        \r\n        this.notes = clone\r\n    }\r\n     saveNote(note){        \r\n        const index = this.notes.findIndex(({ id }) => note.id === id )\r\n        if (index === -1) {\r\n            note.id = uuid()\r\n            this.update(notes => notes.push(note))\r\n        } else {\r\n            this.update(notes => notes.splice(index, 1, note))\r\n        }\r\n\r\n        return note\r\n    }\r\n}\r\n"],"sourceRoot":""}